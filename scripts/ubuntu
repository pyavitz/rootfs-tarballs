#!/bin/bash
#AARCH64 ROOTFS
source lib/ubuntu-source.txt

FILE=ubuntu-base-${UBUNTU_VERSION}-base-arm64.tar.gz
if ls $FILE &>/dev/null; then exit; 
	else echo "";
fi
wget -cq --show-progress http://cdimage.ubuntu.com/ubuntu-base/releases/${UBUNTU_VERSION}/release/ubuntu-base-${UBUNTU_VERSION}-base-arm64.tar.gz

set -x
RAM=0
PROXY=""
IMAGE_FOLDER="img/"

set -eux -o pipefail
IMAGE_LINUX_LOADADDR="0x1080000"
IMAGE_FILE_SUFFIX="$(date +%F)"
IMAGE_FILE_NAME="ubuntu-base-${UBUNTU_VERSION}-base-arm64.img"
if [ $RAM -ne 0 ]; then
	IMAGE_FOLDER="ram/"
fi
mkdir -p "$IMAGE_FOLDER"
if [ $RAM -ne 0 ]; then
	mount -t tmpfs -o size=3G tmpfs $IMAGE_FOLDER
fi
truncate -s 1850MB "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
fdisk "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" <<EOF
o
n
p
1
2048
a
t
b
3613280

p
w

EOF
IMAGE_LOOP_DEV="$(losetup --show -f ${IMAGE_FOLDER}${IMAGE_FILE_NAME})"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p1"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p p1
mount "${IMAGE_LOOP_DEV_ROOTFS}" p1
sync
umount p1
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" p1

### Rootfs
tar xfz ubuntu-base-${UBUNTU_VERSION}-base-arm64.tar.gz -C p1/
rm -f ubuntu-base-${UBUNTU_VERSION}-base-arm64.tar.gz

mkdir -p p1/etc/apt/apt.conf.d p1/etc/dpkg/dpkg.cfg.d
echo "force-unsafe-io" > "p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io"

mkdir -p p1/usr/bin
cp $(which "qemu-aarch64-static") p1/usr/bin

if [ -n "$PROXY" ] ; then
	tee "p1/etc/apt/apt.conf.d/30proxy" <<EOF
Acquire::http::proxy "http://127.0.0.1:3142";
EOF
fi

# setup stage2
cp scripts/ubuntu-stage2 p1/root
cp lib/ubuntu-source.txt p1/root

# mount and chroot
mount -o bind /dev p1/dev
mount -o bind /dev/pts p1/dev/pts
chroot p1 /root/ubuntu-stage2

# unmount
umount p1/dev/pts
umount p1/dev

# clean
rm p1/usr/bin/qemu-aarch64-static
rm -f p1/usr/local/sbin/unminimize
rm p1/root/ubuntu-stage2
rm p1/root/ubuntu-source.txt
rm -f p1/var/cache/debconf/*

if [ -n "$PROXY" ] ; then
	rm p1/etc/apt/apt.conf.d/30proxy
fi
rm p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io

### Finish
e4defrag -c p1

cd p1
tar cfJ ../ubuntu-base-${UBUNTU_VERSION}-base-arm64.tar.gz *
cd ..

umount p1

losetup -d "${IMAGE_LOOP_DEV}"
mv "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" "${IMAGE_FILE_NAME}"
if [ $RAM -ne 0 ]; then
	umount "${IMAGE_FOLDER}"
fi
rmdir "${IMAGE_FOLDER}"
rmdir p1
rm -f ubuntu-base-${UBUNTU_VERSION}-base-arm64.img
